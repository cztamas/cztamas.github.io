{"mappings":"AAAA,MAAMA,cAAgBC,MAAMC,IAC1B,MAAMC,QAAcC,OAAOC,KAAK,gBAC1BF,EAAMG,OAAOJ,EAAU,EAGzBK,WAAaN,MAAOO,EAASC,KACjC,MAAMN,QAAcC,OAAOC,KAAK,gBAC1BF,EAAMO,IAAIF,EAASC,EAAS,EAG9BE,kBAAoBV,MAAMO,IAC9B,IACE,MAAMI,QAA4BC,MAAML,GAExC,OADAD,WAAWC,EAASI,EAAoBE,SACjCF,C,CACP,MAAOG,GACP,MAAMC,QAA0BZ,OAAOa,MAAMT,GAC7C,GAAIQ,EAAmB,OAAOA,EAE9B,MAAM,IAAIE,MAAM,qB,GAIpBC,KAAKC,iBAAiB,WAAWC,IAC/BA,EAAMC,UAAUtB,cAAc,CAAC,eAAe,IAGhDmB,KAAKC,iBAAiB,YAAY,IAAMD,KAAKI,QAAQC,UAErDL,KAAKC,iBAAiB,SAASC,IAC7BA,EAAMI,YAAYd,kBAAkBU,EAAMb,SAAS","sources":["src/service-worker.js"],"sourcesContent":["const addAllToCache = async resources => {\n  const cache = await caches.open('static');\n  await cache.addAll(resources);\n};\n\nconst putInCache = async (request, response) => {\n  const cache = await caches.open('static');\n  await cache.put(request, response);\n};\n\nconst serveNetworkFirst = async request => {\n  try {\n    const responseFromNetwork = await fetch(request);\n    putInCache(request, responseFromNetwork.clone());\n    return responseFromNetwork;\n  } catch (error) {\n    const responseFromCache = await caches.match(request);\n    if (responseFromCache) return responseFromCache;\n\n    throw new Error('no cached response');\n  }\n};\n\nself.addEventListener('install', event => {\n  event.waitUntil(addAllToCache(['index.html']));\n});\n\nself.addEventListener('activate', () => self.clients.claim());\n\nself.addEventListener('fetch', event => {\n  event.respondWith(serveNetworkFirst(event.request));\n});\n"],"names":["addAllToCache","async","resources","cache","caches","open","addAll","putInCache","request","response","put","serveNetworkFirst","responseFromNetwork","fetch","clone","error","responseFromCache","match","Error","self","addEventListener","event","waitUntil","clients","claim","respondWith"],"version":3,"file":"service-worker.js.map"}